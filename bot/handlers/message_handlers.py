"""–ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""

import logging

import telebot
from telebot import types

from bot.tools.input_parser import parse_input
from bot.configs.messages import MessageTemplates
from bot.tools.unit_converter import UnitConverter

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
    )


def register_handlers(bot: telebot.TeleBot) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞.

    –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π, 
    –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –æ–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã `/start` 
    –∏ `/help`, –∞ —Ç–∞–∫–∂–µ –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç 
    —ç—Ç–∏–º –∫–æ–º–∞–Ω–¥–∞–º.
    
    :param bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è 
    –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    """

    @bot.message_handler(commands=['start'])
    def send_start(message: types.Message) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã `/start`.

        –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        """
        bot.send_message(
            message.chat.id,
            text=MessageTemplates.START,
            parse_mode='Markdown'
            )

    @bot.message_handler(commands=['help'])
    def send_help(message: types.Message) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã `/help`.

        –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞
        """
        bot.send_message(
            message.chat.id,
            text=MessageTemplates.HELP,
            parse_mode='Markdown'
            )

    @bot.message_handler(func=lambda m: True)
    def handle_conversion(message: types.Message) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.

        –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç 
        –¥—Ä—É–≥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º. –û–Ω–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è 
        –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
        """
        try:
            value, from_unit, to_unit = parse_input(message.text)
            result, error = UnitConverter().convert(value, from_unit, to_unit)

            response = (
                f'‚ùå –û—à–∏–±–∫–∞: {error}'
                if error
                else f"üî¢ {value} {from_unit} = üì¢ {result} {to_unit}"
                )

        except ValueError as e:
            response = f'‚ùå –û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è: {str(e)}'
        except Exception as e:
            logging.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %s', str(e))
            response = (
                '‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞. '
                '–ö–æ–º–∞–Ω–¥–∞ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.'
                )

        bot.send_message(message.chat.id, response)
